name: Package code for Azure function

on:
  push:
    branches:
    # - master
    - update-workflow
    paths:
    - src/box-service/**
    - src/item-service/**
    - src/pos-service/**
    - src/stock-service/**
  workflow_dispatch:

env:
  dotnet-version: '3.1.x'

jobs:
  build:
    runs-on: windows-latest

    strategy:
      matrix:
        target_path: 
        - src/box-service/
        - src/item-service/
        - src/pos-service/
        - src/stock-service/

    # defaults:
    #   run:
    #     shell: pwsh

    steps:
    # - run: echo $CONTEXT | jq
    #   env:
    #     CONTEXT: ${{ toJson(github) }}
    #   shell: bash
    - name: Get diff
      id: get_diff
      uses: octokit/request-action@v2.x
      with:
        route: GET /repos/:repo/compare/:base...:head
        repo: ${{ github.repository }}
        base: ${{ github.event.before }}
        head: ${{ github.event.after }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    - run: echo $RESULT | jq
      env:
        RESULT: ${{ steps.get_diff.outputs.data }}
      shell: bash
    - name: Check updates under ${{ matrix.target_path }}
      id: check_updates
      if: ${{ startsWith(fromJson(steps.get_diff.outputs.data).files.*.filename, matrix.target_path) }}
      run: echo '::set-output name=FOUND::true'
    - uses: actions/checkout@v2
      if: ${{ steps.check_updates.outputs.FOUND == true }}
    # - name: Check updates in ${{ matrix.target_path }}
    #   id: check_updates
    #   run: |
    #     COUNT=`git diff --name-only ${BEFORE} ${AFTER} | grep -E -n "^${TARGET_PATH}(.+)$" | wc -l`
    #     if [ ${COUNT} -gt 0 ]; then
    #       echo "Updates are found under ${TARGET_PATH}"
    #     else
    #       echo 'Any updates not found'
    #     fi
    #     echo "::set-output name=COUNT::${COUNT}"
    #   shell: bash
    #   env:
    #     BEFORE: ${{ github.event.before }}
    #     AFTER: ${{ github.event.after }}
    #     TARGET_PATH: ${{ matrix.target_path }}
    - name: Setup .NET Core SDK ${{ env.dotnet-version }}
      if: ${{ steps.check_updates.outputs.FOUND }}
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: ${{ env.dotnet-version }}
    - uses: actions/cache@v2
      if: ${{ steps.check_updates.outputs.FOUND == 'true' }}
      with:
        path: ~/.nuget/packages
        key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.lock.json') }}
        restore-keys: |
          ${{ runner.os }}-nuget
