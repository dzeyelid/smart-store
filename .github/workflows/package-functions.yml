name: Package code for Azure function

on:
  push:
    branches:
    # - master
    - update-workflow
    paths:
    - src/box-service/**
    - src/item-service/**
    - src/pos-service/**
    - src/stock-service/**
  workflow_dispatch:

env:
  dotnet-version: '3.1.x'

jobs:
  build:
    runs-on: windows-latest

    strategy:
      matrix:
        target_path: 
        - src/box-service/
        - src/item-service/
        - src/pos-service/
        - src/stock-service/

    outputs:
      target_path: ${{ matrix.target_path }}
      update: ${{ steps.check_updates.outputs.COUNT > 0 }}

    steps:
    - name: Get diff
      id: get_diff
      uses: octokit/request-action@v2.x
      with:
        route: GET /repos/:repo/compare/:base...:head
        repo: ${{ github.repository }}
        base: ${{ github.event.before }}
        head: ${{ github.event.after }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    - name: Check updates under ${{ matrix.target_path }}
      id: check_updates
      shell: bash
      run: |
        COUNT=`echo $FILES | jq "map(select(. | startswith(\"${TARGET_PATH}\"))) | length"`
        echo "::set-output name=COUNT::${COUNT}"
      env:
        FILES: ${{ toJson(fromJson(steps.get_diff.outputs.data).files.*.filename) }}
        TARGET_PATH: ${{ matrix.target_path }}
    - uses: actions/checkout@v2
      if: ${{ fromJson(steps.check_updates.outputs.COUNT) > 0 }}
    - name: Setup .NET Core SDK ${{ env.dotnet-version }}
      if: ${{ steps.check_updates.outputs.COUNT > 0 }}
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: ${{ env.dotnet-version }}
    - uses: actions/cache@v2
      if: ${{ steps.check_updates.outputs.COUNT > 0 }}
      with:
        path: ~/.nuget/packages
        key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.lock.json') }}
        restore-keys: |
          ${{ runner.os }}-nuget

  deploy:
    runs-on: ubuntu-latest
    needs:
    - build

    steps:
    - run: |
        echo $CONTEXT | jq
        echo $OUTPUT | jq
        echo $PREVIOUS_JOB_RESULT | jq
      env:
        CONTEXT: ${{ toJson(github) }}
        OUTPUT: ${{ toJson(needs.outputs) }}
        PREVIOUS_JOB_RESULT: ${{ toJson(needs.outputs.result) }}