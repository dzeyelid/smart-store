name: Package code for Azure function

on:
  push:
    branches:
    # - master
    - update-workflow
    paths:
    - src/box-service/**
    - src/item-service/**
    - src/pos-service/**
    - src/stock-service/**
  workflow_dispatch:

env:
  dotnet_version: '3.1.x'

jobs:
  build:
    runs-on: windows-latest

    strategy:
      matrix:
        service:
        - target_paths:
          - src/box-service/
          build_path: src/box-service/BoxManagementService
          package_name: BoxManagementService
        - target_paths:
          - src/item-service/
          build_path: src/item-service/ItemService.ItemMaster
          package_name: ItemService.ItemMaster
        - target_paths:
          - src/pos-service/
          build_path: src/pos-service/PosService
          package_name: PosService
        - target_paths:
          - src/stock-service/StockService.StockCommand/
          - src/stock-service/StockService.Core/
          build_path: src/stock-service/StockService.StockCommand
          package_name: StockService.StockCommand
        - target_paths:
          - src/stock-service/StockService.StockProcessor/
          - src/stock-service/StockService.Core/
          build_path: src/stock-service/StockService.StockProcessor
          package_name: StockService.StockProcessor
        - target_paths:
          - src/stock-service/StockService.StockQuery/
          - src/stock-service/StockService.Core/
          build_path: src/stock-service/StockService.StockQuery
          package_name: StockService.StockQuery

    env:
      output-dir: ${{ github.workspace }}/outputs
      
    steps:
    - name: Calculate fetch-depth
      id: calc_fetch_depth
      shell: bash
      run: |
        COUNT=`echo ${COMMITS} | jq 'length + 1'`
        echo "::set-output name=COUNT::${COUNT}"
      env:
        COMMITS: ${{ toJson(github.event.commits.*.id) }}
    - uses: actions/checkout@v2
      with:
        fetch-depth: ${{ steps.calc_fetch_depth.outputs.COUNT }}
    - name: Check updates under target paths
      id: check_updates
      shell: bash
      run: |
        COUNT=`git diff --name-only ${BEFORE} ${AFTER} ${TARGET_PATHS} | wc -l`
        echo "::set-output name=COUNT::${COUNT}"
      env:
        BEFORE: ${{ github.event.before }}
        AFTER: ${{ github.event.after }}
        TARGET_PATHS: ${{ join(matrix.service.target_paths, ' ') }}
    - name: Setup .NET Core SDK ${{ env.dotnet_version }}
      if: ${{ steps.check_updates.outputs.COUNT > 0 }}
      uses: actions/setup-dotnet@v1
      with:
        dotnet_version: ${{ env.dotnet_version }}
    - uses: actions/cache@v2
      if: ${{ steps.check_updates.outputs.COUNT > 0 }}
      with:
        path: ~/.nuget/packages
        key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.lock.json') }}
        restore-keys: |
          ${{ runner.os }}-nuget
    - name: Build package
      if: ${{ steps.check_updates.outputs.COUNT > 0 }}
      run: |
        pushd ${{ matrix.service.build_path }}
        dotnet restore
        dotnet build --configuration Release
        dotnet publish --configuration Release --output ${{ env.output-dir }}
        popd
    - name: Archive
      if: ${{ steps.check_updates.outputs.COUNT > 0 }}
      run: |
        Compress-Archive -Path ${{ env.output-dir }}/* -DestinationPath ${{ matrix.service.package_name }}.zip
    - uses: actions/upload-artifact@v2
      if: ${{ steps.check_updates.outputs.COUNT > 0 }}
      with:
        name: ${{ matrix.service.package_name }}
        path: ${{ matrix.service.package_name }}.zip

  deploy:
    runs-on: ubuntu-latest
    needs:
    - build

    steps:
    - uses: actions/download-artifact@v2
    - run: ls -la
